{"ast":null,"code":"import { ITEMS_QUERY } from \"../lib/graphql\";\nimport { ITEMS_QUERY_REQUEST } from \"../lib/types\";\nexport const itemsQuery = (state, dispatch) => async ({\n  limit,\n  page\n}) => {\n  if (state.isClientAuthorized) {\n    try {\n      dispatch({\n        type: ITEMS_QUERY_REQUEST\n      });\n      const {\n        data,\n        error\n      } = await client.request({\n        query: ITEMS_QUERY,\n        variables: {\n          limit,\n          page\n        }\n      });\n      if (data && data.items) return {\n        data: data.items,\n        error\n      };\n      return {\n        data,\n        error\n      };\n    } catch (error) {}\n  }\n\n  return {\n    data: [],\n    error: \"Unauthorized\"\n  };\n};","map":null,"metadata":{},"sourceType":"module"}