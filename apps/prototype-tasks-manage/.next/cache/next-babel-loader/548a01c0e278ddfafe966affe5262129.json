{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/esence/workos-network-monorepo/apps/prototype-tasks-manage/components/FormSetToken.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* --- Global --- */\nimport { PropTypes } from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\nimport { useMondayUpdateCreateMutation } from \"react-monday\";\nimport { useMondayBoardsQuery } from \"react-monday\";\nimport { withMonday, setToken } from \"react-monday\";\nimport { Box } from \"theme-ui\";\nBox;\n/**\n * @name FormModalTokenSet\n * @description Capture feedback from users.\n * @version 0.0.0\n */\n\nconst FormModalTokenSet = (_ref) => {\n  let {\n    updateDefault,\n    sx\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"updateDefault\", \"sx\"]);\n\n  const monday = withMonday();\n  React.useEffect(() => {\n    if (monday.token) {\n      setValue(\"token\", monday.token);\n    }\n  }, []);\n  React.useEffect(() => {\n    console.log(monday, \"mondaymonday\");\n  }, [monday]);\n  /* --- Form Hook State --- */\n\n  const {\n    handleSubmit,\n    register,\n    errors,\n    setValue,\n    formState\n  } = useForm();\n  /* --- Submit Handler --- */\n\n  const onSubmit = async values => {\n    if (values) {\n      monday.setToken(values.token);\n    }\n  };\n  /* --- Form : Component --- */\n\n\n  return __jsx(Box, {\n    as: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    name: \"token\",\n    placeholder: \"Token\",\n    register: register,\n    errors: errors,\n    sx: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    as: \"button\",\n    sx: {\n      bg: \"blue\",\n      color: \"white\",\n      mt: 3,\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, formState.isSubmitting & !formState.isSubmitted ? __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, props.labelLoading) : __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, props.label), !formState.isSubmitting & formState.isSubmitted && __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, props.labelComplete)));\n};\n\nFormModalTokenSet.defaultProps = {\n  sx: {},\n  label: \"Submit\",\n  labelLoading: \"Loading...\",\n  labelComplete: \"Complete\"\n};\nFormModalTokenSet.propTypes = {\n  sx: PropTypes.object\n};\nexport default FormModalTokenSet;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/apps/prototype-tasks-manage/components/FormSetToken.jsx"],"names":["PropTypes","useForm","useMondayUpdateCreateMutation","useMondayBoardsQuery","withMonday","setToken","Box","FormModalTokenSet","updateDefault","sx","props","monday","React","useEffect","token","setValue","console","log","handleSubmit","register","errors","formState","onSubmit","values","bg","color","mt","width","isSubmitting","isSubmitted","labelLoading","label","labelComplete","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["/* --- Global --- */\nimport { PropTypes } from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\nimport { useMondayUpdateCreateMutation } from \"react-monday\";\nimport { useMondayBoardsQuery } from \"react-monday\";\nimport { withMonday, setToken } from \"react-monday\";\nimport { Box } from \"theme-ui\";\nBox;\n\n/**\n * @name FormModalTokenSet\n * @description Capture feedback from users.\n * @version 0.0.0\n */\n\nconst FormModalTokenSet = ({ updateDefault, sx, ...props }) => {\n  const monday = withMonday();\n\n  React.useEffect(() => {\n    if (monday.token) {\n      setValue(\"token\", monday.token);\n    }\n  }, []);\n  React.useEffect(() => {\n    console.log(monday, \"mondaymonday\");\n  }, [monday]);\n\n  /* --- Form Hook State --- */\n  const { handleSubmit, register, errors, setValue, formState } = useForm();\n\n  /* --- Submit Handler --- */\n  const onSubmit = async (values) => {\n    if (values) {\n      monday.setToken(values.token);\n    }\n  };\n\n  /* --- Form : Component --- */\n  return (\n    <Box as=\"form\" onSubmit={handleSubmit(onSubmit)}>\n      <input\n        name=\"token\"\n        placeholder=\"Token\"\n        register={register}\n        errors={errors}\n        sx={{}}\n      />\n      <Box\n        as=\"button\"\n        sx={{ bg: \"blue\", color: \"white\", mt: 3, width: \"100%\" }}\n      >\n        {formState.isSubmitting & !formState.isSubmitted ? (\n          <Box>{props.labelLoading}</Box>\n        ) : (\n          <Box>{props.label}</Box>\n        )}\n\n        {!formState.isSubmitting & formState.isSubmitted && (\n          <Box>{props.labelComplete}</Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nFormModalTokenSet.defaultProps = {\n  sx: {},\n  label: \"Submit\",\n  labelLoading: \"Loading...\",\n  labelComplete: \"Complete\",\n};\n\nFormModalTokenSet.propTypes = {\n  sx: PropTypes.object,\n};\n\nexport default FormModalTokenSet;\n"]},"metadata":{},"sourceType":"module"}