{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Documents/GitHub/esence/workos-network-monorepo/apps/prototype-tasks-manage/components/FormSetToken.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* --- Global --- */\nimport { PropTypes } from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\nimport { useMondayUpdateCreateMutation } from \"@hooks\";\nimport { useMondayBoardsQuery } from \"@hooks\";\nimport { withMonday, setToken } from \"react-monday\";\nimport { Box } from \"theme-ui\";\nBox;\n/**\n * @name FormModalTokenSet\n * @description Capture feedback from users.\n * @version 0.0.0\n */\n\nvar FormModalTokenSet = function FormModalTokenSet(_ref) {\n  _s();\n\n  var monday = _ref.monday,\n      updateDefault = _ref.updateDefault,\n      sx = _ref.sx,\n      props = _objectWithoutProperties(_ref, [\"monday\", \"updateDefault\", \"sx\"]);\n\n  React.useEffect(function () {\n    if (monday.token) {\n      setValue(\"token\", monday.token);\n    }\n  }, []);\n  React.useEffect(function () {\n    console.log(monday, \"mondaymonday\");\n  }, [monday]);\n  /* --- Form Hook State --- */\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      formState = _useForm.formState;\n  /* --- Submit Handler --- */\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (values) {\n                monday.setToken(values.token);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /* --- Form : Component --- */\n\n\n  return __jsx(Box, {\n    as: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    name: \"token\",\n    placeholder: \"Token\",\n    register: register,\n    errors: errors,\n    sx: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    as: \"button\",\n    sx: {\n      bg: \"blue\",\n      color: \"white\",\n      mt: 3,\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, formState.isSubmitting & !formState.isSubmitted ? __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, props.labelLoading) : __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, props.label), !formState.isSubmitting & formState.isSubmitted && __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, props.labelComplete)));\n};\n\n_s(FormModalTokenSet, \"WPXNucc/KXGyYNDLxRVBPOeVzjI=\", false, function () {\n  return [useForm];\n});\n\n_c = FormModalTokenSet;\nFormModalTokenSet.defaultProps = {\n  sx: {},\n  label: \"Submit\",\n  labelLoading: \"Loading...\",\n  labelComplete: \"Complete\"\n};\nFormModalTokenSet.propTypes = {\n  sx: PropTypes.object\n};\nexport default FormModalTokenSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormModalTokenSet\");","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/apps/prototype-tasks-manage/components/FormSetToken.jsx"],"names":["PropTypes","useForm","useMondayUpdateCreateMutation","useMondayBoardsQuery","withMonday","setToken","Box","FormModalTokenSet","monday","updateDefault","sx","props","React","useEffect","token","setValue","console","log","handleSubmit","register","errors","formState","onSubmit","values","bg","color","mt","width","isSubmitting","isSubmitted","labelLoading","label","labelComplete","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["/* --- Global --- */\nimport { PropTypes } from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\nimport { useMondayUpdateCreateMutation } from \"@hooks\";\nimport { useMondayBoardsQuery } from \"@hooks\";\nimport { withMonday, setToken } from \"react-monday\";\nimport { Box } from \"theme-ui\";\nBox;\n\n/**\n * @name FormModalTokenSet\n * @description Capture feedback from users.\n * @version 0.0.0\n */\n\nconst FormModalTokenSet = ({ monday, updateDefault, sx, ...props }) => {\n  React.useEffect(() => {\n    if (monday.token) {\n      setValue(\"token\", monday.token);\n    }\n  }, []);\n  React.useEffect(() => {\n    console.log(monday, \"mondaymonday\");\n  }, [monday]);\n\n  /* --- Form Hook State --- */\n  const { handleSubmit, register, errors, setValue, formState } = useForm();\n\n  /* --- Submit Handler --- */\n  const onSubmit = async (values) => {\n    if (values) {\n      monday.setToken(values.token);\n    }\n  };\n\n  /* --- Form : Component --- */\n  return (\n    <Box as=\"form\" onSubmit={handleSubmit(onSubmit)}>\n      <input\n        name=\"token\"\n        placeholder=\"Token\"\n        register={register}\n        errors={errors}\n        sx={{}}\n      />\n      <Box\n        as=\"button\"\n        sx={{ bg: \"blue\", color: \"white\", mt: 3, width: \"100%\" }}\n      >\n        {formState.isSubmitting & !formState.isSubmitted ? (\n          <Box>{props.labelLoading}</Box>\n        ) : (\n          <Box>{props.label}</Box>\n        )}\n\n        {!formState.isSubmitting & formState.isSubmitted && (\n          <Box>{props.labelComplete}</Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nFormModalTokenSet.defaultProps = {\n  sx: {},\n  label: \"Submit\",\n  labelLoading: \"Loading...\",\n  labelComplete: \"Complete\",\n};\n\nFormModalTokenSet.propTypes = {\n  sx: PropTypes.object,\n};\n\nexport default FormModalTokenSet;\n"]},"metadata":{},"sourceType":"module"}