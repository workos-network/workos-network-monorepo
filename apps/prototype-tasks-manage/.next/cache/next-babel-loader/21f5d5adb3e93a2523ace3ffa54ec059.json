{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/esence/workos-network-monorepo/node_modules/react-monday/src/Provider.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* --- Global --- */\nimport React, { useContext, useReducer, useEffect, useState } from \"react\";\nimport { GraphQLClient, ClientContext } from \"graphql-hooks\";\n/* --- Local --- */\n\nimport * as actionList from \"./actions\";\nimport Context, { initialState } from \"./Context\";\nimport reducer from \"./lib/reducer\";\nimport { enhanceActions } from \"./lib/middleware\";\nimport { AUTHORIZE_CLIENT, ENABLE_DEV_MODE, CONNECT_CLIENT, SET_TOKEN } from \"./lib/types\";\n/**\n * @function Provider\n * @param {Array<React.Component>} children\n * @param {String} url\n * @param {String} token\n */\n\nconst Provider = ({\n  children,\n  url,\n  token,\n  devMode\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  React.useEffect(() => {\n    if (devMode) {\n      dispatch({\n        type: ENABLE_DEV_MODE\n      });\n    }\n\n    if (!url && token) {\n      dispatch({\n        type: AUTHORIZE_CLIENT,\n        payload: {\n          token\n        }\n      });\n    }\n\n    if (url && token) {\n      dispatch({\n        type: CONNECT_CLIENT,\n        payload: {\n          url,\n          token\n        }\n      });\n    }\n  }, []);\n  React.useEffect(() => {\n    if (state.token) {\n      dispatch({\n        type: AUTHORIZE_CLIENT,\n        payload: {\n          token\n        }\n      });\n    }\n  }, [state.token]);\n  React.useMemo(async () => {\n    // Client-side-only code\n    if (false) {\n      if (window.localStorage) {\n        const token = window.localStorage.getItem(\"token\");\n      }\n\n      if (token) {\n        dispatch({\n          type: SET_TOKEN,\n          payload: {\n            token\n          }\n        });\n        dispatch({\n          type: AUTHORIZE_CLIENT,\n          payload: {\n            token\n          }\n        });\n      }\n    }\n  }, [state.isDevMode]);\n  const {\n    isClientAuthorized\n  } = state;\n  const actions = enhanceActions(actionList, state, dispatch);\n  React.useEffect(() => {\n    console.log(state, \"monday state\");\n  }, [state]);\n  return __jsx(ClientContext.Provider, {\n    value: state.client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(Context.Provider, {\n    value: _objectSpread(_objectSpread({}, actions), state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default Provider;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/node_modules/react-monday/src/Provider.jsx"],"names":["React","useContext","useReducer","useEffect","useState","GraphQLClient","ClientContext","actionList","Context","initialState","reducer","enhanceActions","AUTHORIZE_CLIENT","ENABLE_DEV_MODE","CONNECT_CLIENT","SET_TOKEN","Provider","children","url","token","devMode","state","dispatch","type","payload","useMemo","window","localStorage","getItem","isDevMode","isClientAuthorized","actions","console","log","client"],"mappings":"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","sourcesContent":["/* --- Global --- */\nimport React, { useContext, useReducer, useEffect, useState } from \"react\";\nimport { GraphQLClient, ClientContext } from \"graphql-hooks\";\n\n/* --- Local --- */\nimport * as actionList from \"./actions\";\nimport Context, { initialState } from \"./Context\";\nimport reducer from \"./lib/reducer\";\nimport { enhanceActions } from \"./lib/middleware\";\nimport {\n  AUTHORIZE_CLIENT,\n  ENABLE_DEV_MODE,\n  CONNECT_CLIENT,\n  SET_TOKEN,\n} from \"./lib/types\";\n\n/**\n * @function Provider\n * @param {Array<React.Component>} children\n * @param {String} url\n * @param {String} token\n */\nconst Provider = ({ children, url, token, devMode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  React.useEffect(() => {\n    if (devMode) {\n      dispatch({\n        type: ENABLE_DEV_MODE,\n      });\n    }\n    if (!url && token) {\n      dispatch({\n        type: AUTHORIZE_CLIENT,\n        payload: { token },\n      });\n    }\n    if (url && token) {\n      dispatch({\n        type: CONNECT_CLIENT,\n        payload: {\n          url,\n          token,\n        },\n      });\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (state.token) {\n      dispatch({\n        type: AUTHORIZE_CLIENT,\n        payload: { token },\n      });\n    }\n  }, [state.token]);\n\n  React.useMemo(async () => {\n    // Client-side-only code\n    if (process.browser) {\n      if (window.localStorage) {\n        const token = window.localStorage.getItem(\"token\");\n      }\n      if (token) {\n        dispatch({\n          type: SET_TOKEN,\n          payload: { token },\n        });\n        dispatch({\n          type: AUTHORIZE_CLIENT,\n          payload: { token },\n        });\n      }\n    }\n  }, [state.isDevMode]);\n\n  const { isClientAuthorized } = state;\n  const actions = enhanceActions(actionList, state, dispatch);\n\n  React.useEffect(() => {\n    console.log(state, \"monday state\");\n  }, [state]);\n\n  return (\n    <ClientContext.Provider value={state.client}>\n      <Context.Provider\n        value={{\n          ...actions,\n          ...state,\n        }}\n      >\n        {children}\n      </Context.Provider>\n    </ClientContext.Provider>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}