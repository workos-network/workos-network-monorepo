{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* --- Global --- */\nimport React, { useReducer } from \"react\";\nimport withMonday from \"../withContext\";\nimport { ITEMS_QUERY } from \"../lib/graphql\";\nexport const ITEMS_QUERY_REQUEST = \"ITEMS_QUERY_REQUEST\";\nexport const ITEMS_QUERY_SUCCESS = \"ITEMS_QUERY_SUCCESS\";\nexport const ITEMS_QUERY_FAILURE = \"ITEMS_QUERY_FAILURE\";\n/**\n * @name useItemsQuery\n * @param {Integer} limit\n * @param {Integer} page\n */\n\nexport const useItemsQuery = ({\n  limit,\n  page\n}) => {\n  const monday = withMonday();\n  const [, Set] = React.useState();\n  const initialState = {\n    data: undefined,\n    error: undefined,\n    loading: false\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case ITEMS_QUERY_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: true\n        });\n\n      case ITEMS_QUERY_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      case ITEMS_QUERY_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: action.payload\n        });\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  /* ------------------- */\n  // Actions\n\n  /* ------------------- */\n\n  React.useEffect(inputs => {\n    if (state.loading) {\n      console.log(\"requesting\");\n\n      if (monday.client && monday.isClientAuthorized) {\n        console.log(monday.client, \"monday.client\");\n        monday.client.request({\n          query: ITEMS_QUERY,\n          variables: {\n            limit: 35 // page: inputs.page\n\n          }\n        }).then(({\n          data,\n          error\n        }) => {\n          dispatch({\n            type: ITEMS_QUERY_SUCCESS,\n            payload: {\n              data: data.items,\n              error\n            }\n          });\n        }).catch((_ref) => {\n          let {\n            data,\n            error\n          } = _ref,\n              rest = _objectWithoutProperties(_ref, [\"data\", \"error\"]);\n\n          console.log(data, error, rest, \"data, error\");\n          dispatch({\n            type: ITEMS_QUERY_FAILURE,\n            payload: error\n          });\n        });\n      }\n    }\n  }, [state.loading, monday.client, monday.isClientAuthorized]);\n\n  const request = inputs => dispatch({\n    type: ITEMS_QUERY_REQUEST,\n    payload: inputs\n  }); // const { loading, error, data, refetch, subscribeToMore } = useQuery(\n  //   ITEMS_QUERY,\n  //   {\n  //     variables: {\n  //       limit: 30,\n  //       page: 1\n  //     }\n  //   }\n  // );\n\n\n  return {\n    request,\n    data: state.data,\n    loading: state.loading,\n    error: state.error,\n    refetch: request\n  };\n};\nexport default useItemsQuery;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/node_modules/react-monday/src/hooks/useItemsQuery.js"],"names":["React","useReducer","withMonday","ITEMS_QUERY","ITEMS_QUERY_REQUEST","ITEMS_QUERY_SUCCESS","ITEMS_QUERY_FAILURE","useItemsQuery","limit","page","monday","Set","useState","initialState","data","undefined","error","loading","reducer","state","action","type","payload","Error","dispatch","useEffect","inputs","console","log","client","isClientAuthorized","request","query","variables","then","items","catch","rest","refetch"],"mappings":"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","sourcesContent":["/* --- Global --- */\nimport React, { useReducer } from \"react\";\nimport withMonday from \"../withContext\";\nimport { ITEMS_QUERY } from \"../lib/graphql\";\n\nexport const ITEMS_QUERY_REQUEST = \"ITEMS_QUERY_REQUEST\";\nexport const ITEMS_QUERY_SUCCESS = \"ITEMS_QUERY_SUCCESS\";\nexport const ITEMS_QUERY_FAILURE = \"ITEMS_QUERY_FAILURE\";\n\n/**\n * @name useItemsQuery\n * @param {Integer} limit\n * @param {Integer} page\n */\nexport const useItemsQuery = ({ limit, page }) => {\n  const monday = withMonday();\n  const [, Set] = React.useState();\n  const initialState = {\n    data: undefined,\n    error: undefined,\n    loading: false,\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case ITEMS_QUERY_REQUEST:\n        return {\n          ...state,\n          loading: true,\n        };\n      case ITEMS_QUERY_SUCCESS:\n        return {\n          ...state,\n          ...action.payload,\n        };\n      case ITEMS_QUERY_FAILURE:\n        return {\n          ...state,\n          error: action.payload,\n        };\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  /* ------------------- */\n  // Actions\n  /* ------------------- */\n  React.useEffect(\n    (inputs) => {\n      if (state.loading) {\n        console.log(\"requesting\");\n        if (monday.client && monday.isClientAuthorized) {\n          console.log(monday.client, \"monday.client\");\n          monday.client\n            .request({\n              query: ITEMS_QUERY,\n              variables: {\n                limit: 35,\n                // page: inputs.page\n              },\n            })\n            .then(({ data, error }) => {\n              dispatch({\n                type: ITEMS_QUERY_SUCCESS,\n                payload: {\n                  data: data.items,\n                  error,\n                },\n              });\n            })\n            .catch(({ data, error, ...rest }) => {\n              console.log(data, error, rest, \"data, error\");\n              dispatch({\n                type: ITEMS_QUERY_FAILURE,\n                payload: error,\n              });\n            });\n        }\n      }\n    },\n    [state.loading, monday.client, monday.isClientAuthorized]\n  );\n\n  const request = (inputs) =>\n    dispatch({\n      type: ITEMS_QUERY_REQUEST,\n      payload: inputs,\n    });\n\n  // const { loading, error, data, refetch, subscribeToMore } = useQuery(\n  //   ITEMS_QUERY,\n  //   {\n  //     variables: {\n  //       limit: 30,\n  //       page: 1\n  //     }\n  //   }\n  // );\n\n  return {\n    request,\n    data: state.data,\n    loading: state.loading,\n    error: state.error,\n    refetch: request,\n  };\n};\n\nexport default useItemsQuery;\n"]},"metadata":{},"sourceType":"module"}