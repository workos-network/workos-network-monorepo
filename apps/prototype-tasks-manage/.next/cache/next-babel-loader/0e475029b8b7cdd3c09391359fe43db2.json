{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/esence/workos-network-monorepo/apps/prototype-tasks-manage/components/ModalSetToken.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { useModal } from \"react-modal-hook\";\n\nconst ModalSetToken = () => {\n  const [showModal, hideModal] = useModal(() => __jsx(ReactModal, {\n    isOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Modal content\"), __jsx(\"button\", {\n    onClick: hideModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Hide modal\")));\n  return __jsx(\"button\", {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }, \"Show modal\");\n};\n\nexport default ModalSetToken;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/apps/prototype-tasks-manage/components/ModalSetToken.jsx"],"names":["React","ReactModal","useModal","ModalSetToken","showModal","hideModal"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,SAAD,EAAYC,SAAZ,IAAyBH,QAAQ,CAAC,MACtC,MAAC,UAAD;AAAY,IAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADqC,CAAvC;AAOA,SAAO;AAAQ,IAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,CATD;;AAWA,eAAeD,aAAf","sourcesContent":["import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { useModal } from \"react-modal-hook\";\n\nconst ModalSetToken = () => {\n  const [showModal, hideModal] = useModal(() => (\n    <ReactModal isOpen>\n      <p>Modal content</p>\n      <button onClick={hideModal}>Hide modal</button>\n    </ReactModal>\n  ));\n\n  return <button onClick={showModal}>Show modal</button>;\n};\n\nexport default ModalSetToken;\n"]},"metadata":{},"sourceType":"module"}