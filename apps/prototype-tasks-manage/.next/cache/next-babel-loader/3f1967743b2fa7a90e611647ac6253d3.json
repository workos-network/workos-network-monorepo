{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/esence/workos-network-monorepo/apps/prototype-tasks-manage/components/ModalSetToken.jsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { useModal } from \"react-modal-hook\";\nimport { Box } from \"theme-ui\";\nimport FormSetToken from \"./FormSetToken\";\n\nconst ModalSetToken = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const [showModal, hideModal] = useModal(() => __jsx(ReactModal, {\n    isOpen: true,\n    width: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    sx: {\n      width: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Modal content\"), __jsx(FormSetToken, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: hideModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Hide modal\"))));\n  return __jsx(\"span\", {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport default ModalSetToken;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/apps/prototype-tasks-manage/components/ModalSetToken.jsx"],"names":["React","ReactModal","useModal","Box","FormSetToken","ModalSetToken","children","props","showModal","hideModal","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,aAAa,GAAG,UAA4B;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AAAA,MAAZC,KAAY;;AAChD,QAAM,CAACC,SAAD,EAAYC,SAAZ,IAAyBP,QAAQ,CAAC,MACtC,MAAC,UAAD;AAAY,IAAA,MAAM,MAAlB;AAAmB,IAAA,KAAK,EAAE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADqC,CAAvC;AAUA,SAAO;AAAM,IAAA,OAAO,EAAED,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BF,QAA3B,CAAP;AACD,CAZD;;AAcA,eAAeD,aAAf","sourcesContent":["import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { useModal } from \"react-modal-hook\";\nimport { Box } from \"theme-ui\";\nimport FormSetToken from \"./FormSetToken\";\n\nconst ModalSetToken = ({ children, ...props }) => {\n  const [showModal, hideModal] = useModal(() => (\n    <ReactModal isOpen width={500}>\n      <Box sx={{ width: 500 }}>\n        <p>Modal content</p>\n        <FormSetToken />\n        <button onClick={hideModal}>Hide modal</button>\n      </Box>\n    </ReactModal>\n  ));\n\n  return <span onClick={showModal}>{children}</span>;\n};\n\nexport default ModalSetToken;\n"]},"metadata":{},"sourceType":"module"}