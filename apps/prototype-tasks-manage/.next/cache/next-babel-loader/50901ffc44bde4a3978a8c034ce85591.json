{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_TOKEN } from \"../lib/types\";\nexport var setToken = function setToken(state, dispatch) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: SET_TOKEN,\n                payload: {\n                  token: token\n                }\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/node_modules/react-monday/src/actions/setToken.js"],"names":["SET_TOKEN","setToken","state","dispatch","token","type","payload"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,cAA1B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR;AAAA;AAAA,wEAAqB,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAC3CD,cAAAA,QAAQ,CAAC;AACPE,gBAAAA,IAAI,EAAEL,SADC;AAEPM,gBAAAA,OAAO,EAAE;AACPF,kBAAAA,KAAK,EAALA;AADO;AAFF,eAAD,CAAR;;AAD2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import { SET_TOKEN } from \"../lib/types\";\n\nexport const setToken = (state, dispatch) => async token => {\n  dispatch({\n    type: SET_TOKEN,\n    payload: {\n      token\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}