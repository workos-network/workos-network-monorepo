{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query($limit: Int, $page: Int, $ids: [Int], $newest_first: Boolean) {\\n    items(limit: $limit, page: $page, ids: $ids, newest_first: $newest_first) {\\n      id\\n      creator_id\\n      name\\n      created_at\\n      board {\\n        id\\n        name\\n        description\\n      }\\n      column_values {\\n        additional_info\\n        id\\n        text\\n        title\\n        type\\n        value\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($item_id: Int, $body: String!) {\\n    create_update(item_id: $item_id, body: $body) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\n/* ----------------------- */\n// Contract : Query\n\n/* ----------------------- */\n\nexport var updateCreateMutation = gql(_templateObject());\nexport var ITEM_MUTATE = gql(_templateObject2());","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/node_modules/react-monday/src/lib/graphql/mutations.js"],"names":["gql","updateCreateMutation","ITEM_MUTATE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA;AACA;;AACA;;AACA,OAAO,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;AAQP,OAAO,IAAME,WAAW,GAAGF,GAAH,oBAAjB","sourcesContent":["import gql from \"graphql-tag\";\n\n/* ----------------------- */\n// Contract : Query\n/* ----------------------- */\nexport const updateCreateMutation = gql`\n  mutation($item_id: Int, $body: String!) {\n    create_update(item_id: $item_id, body: $body) {\n      id\n    }\n  }\n`;\n\nexport const ITEM_MUTATE = gql`\n  query($limit: Int, $page: Int, $ids: [Int], $newest_first: Boolean) {\n    items(limit: $limit, page: $page, ids: $ids, newest_first: $newest_first) {\n      id\n      creator_id\n      name\n      created_at\n      board {\n        id\n        name\n        description\n      }\n      column_values {\n        additional_info\n        id\n        text\n        title\n        type\n        value\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}