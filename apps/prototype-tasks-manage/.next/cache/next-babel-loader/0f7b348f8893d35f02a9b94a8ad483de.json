{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ITEMS_QUERY } from \"../lib/graphql\";\nimport { ITEMS_QUERY_REQUEST } from \"../lib/types\";\nexport var itemsQuery = function itemsQuery(state, dispatch) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var limit, page, _yield$client$request, data, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              limit = _ref.limit, page = _ref.page;\n\n              if (!state.isClientAuthorized) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.prev = 2;\n              dispatch({\n                type: ITEMS_QUERY_REQUEST\n              });\n              _context.next = 6;\n              return client.request({\n                query: ITEMS_QUERY,\n                variables: {\n                  limit: limit,\n                  page: page\n                }\n              });\n\n            case 6:\n              _yield$client$request = _context.sent;\n              data = _yield$client$request.data;\n              error = _yield$client$request.error;\n\n              if (!(data && data.items)) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\", {\n                data: data.items,\n                error: error\n              });\n\n            case 11:\n              return _context.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 16:\n              return _context.abrupt(\"return\", {\n                data: [],\n                error: \"Unauthorized\"\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 14]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}