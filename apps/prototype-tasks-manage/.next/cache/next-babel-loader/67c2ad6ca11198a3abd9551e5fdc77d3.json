{"ast":null,"code":"/* --- Global --- */\nimport { useState, useMemo } from \"react\";\nimport { useMutation } from \"react-apollo\";\n/* --- Local --- */\n\nimport { updateCreateMutation } from \"@mutations\";\n/**\n * @name useMondayUpdateCreateMutation\n * @param {Object} filters\n * @param {Integer} limit\n * @param {Function} children\n */\n\nexport const useMondayUpdateCreateMutation = props => {\n  let {\n    0: list,\n    1: setList\n  } = useState([]);\n  const [requestMutation, {\n    loading,\n    error,\n    data,\n    refetch\n  }] = useMutation(updateCreateMutation);\n  return {\n    requestMutation,\n    data,\n    loading,\n    error,\n    refetch\n  };\n};\nexport default useMondayUpdateCreateMutation;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/esence/workos-network-monorepo/node_modules/react-monday/src/hooks/useMondayUpdateCreateMutation.js"],"names":["useState","useMemo","useMutation","updateCreateMutation","useMondayUpdateCreateMutation","props","list","setList","requestMutation","loading","error","data","refetch"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA;;AACA,SAASC,oBAAT,QAAqC,YAArC;AAEA;;;;;;;AAMA,OAAO,MAAMC,6BAA6B,GAAIC,KAAD,IAAW;AACtD,MAAI;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAM,CAACQ,eAAD,EAAkB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,GAAlB,IAAuDV,WAAW,CACtEC,oBADsE,CAAxE;AAIA,SAAO;AACLK,IAAAA,eADK;AAELG,IAAAA,IAFK;AAGLF,IAAAA,OAHK;AAILC,IAAAA,KAJK;AAKLE,IAAAA;AALK,GAAP;AAOD,CAdM;AAgBP,eAAeR,6BAAf","sourcesContent":["/* --- Global --- */\nimport { useState, useMemo } from \"react\";\nimport { useMutation } from \"react-apollo\";\n\n/* --- Local --- */\nimport { updateCreateMutation } from \"@mutations\";\n\n/**\n * @name useMondayUpdateCreateMutation\n * @param {Object} filters\n * @param {Integer} limit\n * @param {Function} children\n */\nexport const useMondayUpdateCreateMutation = (props) => {\n  let [list, setList] = useState([]);\n\n  const [requestMutation, { loading, error, data, refetch }] = useMutation(\n    updateCreateMutation\n  );\n\n  return {\n    requestMutation,\n    data,\n    loading,\n    error,\n    refetch,\n  };\n};\n\nexport default useMondayUpdateCreateMutation;\n"]},"metadata":{},"sourceType":"module"}